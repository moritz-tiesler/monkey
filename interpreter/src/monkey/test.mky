let map = fn(arr, func) {
    let iter = fn(arr, acc) {
        if (arr.len() == 0) {
            return acc
        } else {
            iter(arr.rest(), push(acc, func(arr.first())))
        }
    }
    iter(arr, [])
};

let forEach = fn(arr, action) {
	let iter = fn(arr) {
		if (arr.len() > 0) {
			action(arr.first())
			iter(arr.rest())
		}			
	}
	iter(arr);
	arr;
};

let acc = fn(arr, initial, f) {
	let iter = fn(arr, curr) {
		if (arr.len() == 0) {
			return curr
		} else {
			iter(arr.rest(), f(curr, arr.first()))
		}
	}
	iter(arr, initial)
};
let arr_all = fn(arr, pred) {
    let iter = fn(arr) {
        if (arr.len() == 0) {
            return true 
        }
        if (!pred(arr.first())) {
            return false
        } else {
            return iter(arr.rest())
        }
    };
    iter(arr)
};

let arr_any = fn(arr, pred) {
    let iter = fn(arr) {
        if (arr.len() == 0) {
            return false
        }
        if (pred(arr.first())) {
            return true
        } else {
            return iter(arr.rest())
        } 
    };
    iter(arr)
};

let d = 4;
puts([2, 3, 1].arr_all {x -> x < 4}); 
[1, 2, 3] .map {x -> x * 2} .forEach {x -> puts(x)} .acc(100) {x, y -> x + y } .puts();

let fun = fn(x) {
	let iter = fn(n) {
		if (n == 0) {

		} else {
			iter(x-1);
		}
	};
};

fun(2);
